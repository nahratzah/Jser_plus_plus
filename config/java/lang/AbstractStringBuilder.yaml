---
classes:
  java.lang.AbstractStringBuilder:
    dev_mode: false
    fields:
      value:
        visibility: public
        type:
          cxx: ::std::string
          includes:
            declaration:
            - string
    members:
    - type: constructor
    - type: constructor
      arguments:
      - name: s
        type:
          cxx: ::std::string_view
          includes:
            declaration:
            - string_view
      initializers:
        value: s.begin(), s.end()
    - type: method
      name: append
      override: true
      arguments:
      - name: s
        type:
          cxx: ::std::string_view
          includes:
            declaration:
            - string_view
      body: |
        value.append(s.begin(), s.end());
    - type: method
      name: size
      override: true
      const: true
      noexcept: true
      covariant_return: false
      return:
        cxx: ::std::size_t
        includes:
          declaration:
          - cstddef
      body: |
        return value.size();
    - type: method
      name: empty
      override: true
      const: true
      noexcept: true
      covariant_return: false
      return:
        cxx: bool
      body: |
        return value.empty();
    - type: method
      name: at
      override: true
      const: true
      arguments:
      - name: index
        type:
          cxx: ::std::size_t
          includes:
            declaration:
            - cstddef
      return:
        cxx: char
      body: |
        return value.at(index);
    - type: method
      name: front
      override: true
      const: true
      return:
        cxx: char
      body: |
        return value.front();
    - type: method
      name: back
      override: true
      const: true
      return:
        cxx: char
      body: |
        return value.back();
    - type: method
      name: str
      override: true
      const: true
      return:
        cxx: ::std::string
        includes:
          declaration:
          - string
      body: |
        return value;
    - type: method
      name: substr
      override: true
      const: true
      arguments:
      - name: pos
        type:
          cxx: ::std::size_t
          includes:
            declaration:
            - cstddef
      - name: count
        type:
          cxx: ::std::size_t
          includes:
            declaration:
            - cstddef
      return:
        java: java.lang.String
      body: |
        return $boundTemplateType(java.({java.lang.String}), "style=type, class")$(
            ::java::allocate,
            std::string_view(this->value).substr(pos, count));
