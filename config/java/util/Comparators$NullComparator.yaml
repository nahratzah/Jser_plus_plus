---
classes:
  java.util.Comparators$NullComparator<T>:
    dev_mode: false
    members:
    - type: method
      name: compare
      const: true
      override: true
      arguments:
      - name: x
        type:
          java: const T
      - name: y
        type:
          java: const T
      return:
        java: int
      body: |
        if (x == nullptr && y == nullptr)
          return 0;
        else if (x == nullptr)
          return (nullFirst ? -1 : 1);
        else if (y == nullptr)
          return (!nullFirst ? -1 : 1);
        else if (real == nullptr)
          return 0;
        else
          return real->compare(std::move(x), std::move(y));
    - type: constructor
      arguments:
      - name: nullFirst
        type:
          cxx: bool
      - name: real
        type:
          java: java.util.Comparator<? super T>
      initializers:
        nullFirst: nullFirst
        real: ::java::cast<$boundTemplateType(java.("java.util.Comparator<T>"), "style=type, class")$>(std::move(real))
