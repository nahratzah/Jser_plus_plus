---
classes:
  java.util.NavigableMap<K, V>:
    members:
    - type: method
      name: begin
      virtual: true
      return:
        cxx: ::java::bidirectional_pair_iterator<$boundTemplateType(java.("K"), "style=type")$, $boundTemplateType(java.("V"), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
    - type: method
      name: end
      virtual: true
      return:
        cxx: ::java::bidirectional_pair_iterator<$boundTemplateType(java.("K"), "style=type")$, $boundTemplateType(java.("V"), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
    - type: method
      name: begin
      virtual: true
      const: true
      return:
        cxx: ::java::bidirectional_pair_iterator<const $boundTemplateType(java.("K"), "style=type")$, const $boundTemplateType(java.("V"), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
    - type: method
      name: end
      virtual: true
      const: true
      return:
        cxx: ::java::bidirectional_pair_iterator<const $boundTemplateType(java.("K"), "style=type")$, const $boundTemplateType(java.("V"), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
    - type: method
      name: find
      virtual: true
      const: true
      arguments:
      - name: k
        type:
          java: const K
      return:
        cxx: ::java::bidirectional_pair_iterator<const $boundTemplateType(java.({K}), "style=type")$, const $boundTemplateType(java.({V}), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      doc_string: |
        \brief Find element in the map.
        \param k Key to the element to find.
        \returns Iterator to the element, or if the element is absent, an iterator to end.
    - type: method
      name: find
      virtual: true
      arguments:
      - name: k
        type:
          java: const K
      return:
        cxx: ::java::bidirectional_pair_iterator<$boundTemplateType(java.({K}), "style=type")$, $boundTemplateType(java.({V}), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      doc_string: |
        \brief Find element in the set.
        \param k Key to the element to find.
        \returns Iterator to the element, or if the element is absent, an iterator to end.
