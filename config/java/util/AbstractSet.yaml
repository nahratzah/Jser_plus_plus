---
classes:
  java.util.AbstractSet<E>:
    dev_mode: false
    members:
    - type: method
      name: __hash_code__
      noexcept: true
      override: true
      const: true
      visibility: protected
      covariant_return: false
      final: true
      arguments:
      - name: specialized
        type:
          cxx: bool
      - name: max_cascade
        type:
          cxx: ::std::size_t
          includes:
            declaration:
            - cstddef
      return:
        cxx: ::std::size_t
        includes:
          declaration:
          - cstddef
      body: |
        return this->$boundTemplateType(java.({java.util.Set<E>}), "style=erased")$::__hash_code__(specialized, max_cascade);
    - type: method
      name: __equal__
      override: true
      const: true
      visibility: protected
      covariant_return: false
      arguments:
      - name: specialized
        type:
          cxx: bool
      - name: eq
        type:
          cxx: ::java::_equal_helper&
          includes:
            declaration:
            - java/object_intf.h
            implementation:
            - java/reflect.h
      - name: other
        type:
          cxx: const ::java::object_intf&
          includes:
            declaration:
            - java/object_intf.h
      body: |
        return this->$boundTemplateType(java.({java.util.Set<E>}), "style=erased")$::__equal__(specialized, eq, other);
    - type: method
      name: contains
      override: true
      const: true
      arguments:
      - name: e
        type:
          java: const E
      return:
        cxx: bool
      doc_string: |
        \brief Test if element is present in this set.
        \param e An element to find.
        \returns True if the element is present in the set. False otherwise.
      body: |
        return find(std::move(e)) != end();
