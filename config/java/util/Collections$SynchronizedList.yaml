---
classes:
  java.util.Collections$SynchronizedList<E>:
    dev_mode: true
    fields:
      list:
        final: true
        visibility: private
    members:
    - type: constructor
      arguments:
      - name: list
        type:
          java: java.util.List<E>
      super: list
      initializers:
        list: std::move(list)
    - type: method
      name: insert
      override: true
      arguments:
      - name: e
        type:
          java: E
      body: |
        return list->insert(std::move(e));
    - type: method
      name: __hash_code__
      noexcept: true
      override: true
      const: true
      visibility: protected
      covariant_return: false
      arguments:
      - name: specialized
        type:
          cxx: bool
      - name: max_cascade
        type:
          cxx: ::std::size_t
          includes:
            declaration:
            - cstddef
      return:
        cxx: ::std::size_t
        includes:
          declaration:
          - cstddef
      body: |
        return this->$boundTemplateType(java.({java.util.Collections\$SynchronizedCollection<E>}), "style=erased")$::__hash_code__(specialized, max_cascade);
    - type: method
      name: __equal__
      override: true
      const: true
      visibility: protected
      covariant_return: false
      arguments:
      - name: specialized
        type:
          cxx: bool
      - name: eq
        type:
          cxx: ::java::_equal_helper&
          includes:
            declaration:
            - java/object_intf.h
            implementation:
            - java/reflect.h
      - name: other
        type:
          cxx: const ::java::object_intf&
          includes:
            declaration:
            - java/object_intf.h
      body: |
        return this->$boundTemplateType(java.({java.util.Collections\$SynchronizedCollection<E>}), "style=erased")$::__equal__(specialized, eq, other);
