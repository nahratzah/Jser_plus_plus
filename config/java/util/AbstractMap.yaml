---
classes:
  java.util.AbstractMap<K, V>:
    dev_mode: false
    members:
    - type: method
      name: __hash_code__
      noexcept: true
      override: true
      const: true
      visibility: protected
      covariant_return: false
      final: true
      arguments:
      - name: specialized
        type:
          cxx: bool
      - name: max_cascade
        type:
          cxx: ::std::size_t
          includes:
            declaration:
            - cstddef
      return:
        cxx: ::std::size_t
        includes:
          declaration:
          - cstddef
      body: |
        return this->$boundTemplateType(java.({java.util.Map<K, V>}), "style=erased")$::__hash_code__(specialized, max_cascade);
    - type: method
      name: __equal__
      override: true
      const: true
      visibility: protected
      covariant_return: false
      arguments:
      - name: specialized
        type:
          cxx: bool
      - name: eq
        type:
          cxx: ::java::_equal_helper&
          includes:
            declaration:
            - java/object_intf.h
            implementation:
            - java/reflect.h
      - name: other
        type:
          cxx: const ::java::object_intf&
          includes:
            declaration:
            - java/object_intf.h
      body: |
        return this->$boundTemplateType(java.({java.util.Map<K, V>}), "style=erased")$::__equal__(specialized, eq, other);
    - type: method
      name: empty
      const: true
      override: true
      noexcept: true
      covariant_return: false
      return:
        cxx: bool
      body: |
        return size() == 0u;
    # XXX implement to_string logic for objects
