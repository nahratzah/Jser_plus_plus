---
classes:
  java.util.Collections$CheckedNavigableSet<E>:
    dev_mode: true
    fields:
      set_:
        type:
          java: java.util.NavigableSet<E>
        final: true
        visibility: private
    members:
    - type: constructor
      arguments:
      - name: set
        type:
          java: const java.util.NavigableSet<E>
      super: set
      initializers:
        set_: set
    members:
    - type: method
      name: begin
      override: true
      return:
        cxx: ::java::bidirectional_iterator<$boundTemplateType(java.("E"), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      body: |
        return set_->begin();
    - type: method
      name: end
      override: true
      return:
        cxx: ::java::bidirectional_iterator<$boundTemplateType(java.("E"), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      body: |
        return set_->end();
    - type: method
      name: begin
      const: true
      override: true
      return:
        cxx: ::java::bidirectional_iterator<const $boundTemplateType(java.("E"), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      body: |
        return set_->begin();
    - type: method
      name: end
      const: true
      override: true
      return:
        cxx: ::java::bidirectional_iterator<const $boundTemplateType(java.("E"), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      body: |
        return set_->end();
    - type: method
      name: find
      override: true
      const: true
      arguments:
      - name: e
        type:
          java: const E
      return:
        cxx: ::java::forward_iterator<const $boundTemplateType(java.({E}), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      body: |
        return set_->find(std::move(e));
    - type: method
      name: find
      override: true
      arguments:
      - name: e
        type:
          java: const E
      return:
        cxx: ::java::bidirectional_iterator<$boundTemplateType(java.({E}), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      body: |
        return set_->find(std::move(e));
