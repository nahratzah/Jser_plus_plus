---
classes:
  java.util.SortedMap<K, V>:
    dev_mode: false
    doc_string: |
      \brief A sorted map of elements.
      \details Essentially the java equivalent of std::map.
    members:
    - type: method
      name: comparator
      const: true
      virtual: true
      return:
        java: const java.util.Comparator<? super K>
    - type: method
      name: front
      virtual: true
      const: true
      return:
        cxx: ::std::pair<const $boundTemplateType(java.({const K}), "style=type, class")$, $boundTemplateType(java.({const V}), "style=type, class")$>
        includes:
          declaration:
          - utility
      doc_string: |
        \brief Retrieve the first element from the map.
        \returns The first element.
    - type: method
      name: back
      virtual: true
      const: true
      return:
        cxx: ::std::pair<const $boundTemplateType(java.({const K}), "style=type, class")$, $boundTemplateType(java.({const V}), "style=type, class")$>
        includes:
          declaration:
          - utility
      doc_string: |
        \brief Retrieve the last element from the map.
        \returns The last element.
    - type: method
      name: front
      virtual: true
      return:
        cxx: ::std::pair<const $boundTemplateType(java.({K}), "style=type, class")$, $boundTemplateType(java.({V}), "style=type, class")$>
        includes:
          declaration:
          - utility
      doc_string: |
        \brief Retrieve the first element from the map.
        \returns The first element.
    - type: method
      name: back
      virtual: true
      return:
        cxx: ::std::pair<const $boundTemplateType(java.({K}), "style=type, class")$, $boundTemplateType(java.({V}), "style=type, class")$>
        includes:
          declaration:
          - utility
      doc_string: |
        \brief Retrieve the last element from the map.
        \returns The last element.
    - type: method
      name: lower_bound
      virtual: true
      arguments:
      - name: k
        type:
          java: const K
      return:
        cxx: ::java::forward_pair_iterator<$boundTemplateType(java.({K}), "style=type")$, $boundTemplateType(java.({V}), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      doc_string: |
        \brief Find element in the map.
        \param k Key to the element to find.
        \returns Iterator to the element with key greater than or equal to \p k.
    - type: method
      name: lower_bound
      const: true
      virtual: true
      arguments:
      - name: k
        type:
          java: const K
      return:
        cxx: ::java::forward_pair_iterator<const $boundTemplateType(java.({K}), "style=type")$, const $boundTemplateType(java.({V}), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      doc_string: |
        \brief Find element in the map.
        \param k Key to the element to find.
        \returns Iterator to the element with key greater than or equal to \p k.
    - type: method
      name: upper_bound
      virtual: true
      arguments:
      - name: k
        type:
          java: const K
      return:
        cxx: ::java::forward_pair_iterator<$boundTemplateType(java.({K}), "style=type")$, $boundTemplateType(java.({V}), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      doc_string: |
        \brief Find element in the map.
        \param k Key to the element to find.
        \returns Iterator to the element with key greater than \p k.
    - type: method
      name: upper_bound
      const: true
      virtual: true
      arguments:
      - name: k
        type:
          java: const K
      return:
        cxx: ::java::forward_pair_iterator<const $boundTemplateType(java.({K}), "style=type")$, const $boundTemplateType(java.({V}), "style=type")$>
        includes:
          declaration:
          - java/iterator.h
      doc_string: |
        \brief Find element in the map.
        \param k Key to the element to find.
        \returns Iterator to the element with key greater than \p k.
    - type: method
      name: headMap
      virtual: true
      arguments:
      - name: toKey
        type:
          java: const K
      return:
        java: java.util.SortedMap<K, V>
      doc_string: |
        \brief Retrieve a submap containing all keys until \p toKey.
        \details The returned map is a view of this map.
    - type: method
      name: headMap
      virtual: true
      const: true
      arguments:
      - name: toKey
        type:
          java: const K
      return:
        java: const java.util.SortedMap<K, V>
      doc_string: |
        \brief Retrieve a submap containing all keys until \p toKey.
        \details The returned map is a view of this map.
    - type: method
      name: tailMap
      virtual: true
      arguments:
      - name: fromKey
        type:
          java: const K
      return:
        java: java.util.SortedMap<K, V>
      doc_string: |
        \brief Retrieve a submap containing all keys starting at \p fromKey.
        \details The returned map is a view of this map.
    - type: method
      name: tailMap
      virtual: true
      const: true
      arguments:
      - name: fromKey
        type:
          java: const K
      return:
        java: const java.util.SortedMap<K, V>
      doc_string: |
        \brief Retrieve a submap containing all keys starting at \p fromKey.
        \details The returned map is a view of this map.
    - type: method
      name: subMap
      virtual: true
      arguments:
      - name: fromKey
        type:
          java: const K
      - name: toKey
        type:
          java: const K
      return:
        java: java.util.SortedMap<K, V>
      doc_string: |
        \brief Retrieve a submap containing all keys starting at \p fromKey, until \p toKey.
        \details The returned map is a view of this map.
    - type: method
      name: subMap
      virtual: true
      const: true
      arguments:
      - name: fromKey
        type:
          java: const K
      - name: toKey
        type:
          java: const K
      return:
        java: const java.util.SortedMap<K, V>
      doc_string: |
        \brief Retrieve a submap containing all keys starting at \p fromKey, until \p toKey.
        \details The returned map is a view of this map.
